<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SELENIUM on Expand Testing Blog | Tawfik Nouri</title><link>https://blog.expandtesting.com/tags/selenium/</link><description>Recent content in SELENIUM on Expand Testing Blog | Tawfik Nouri</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Sat, 01 Aug 2020 18:08:30 +0200</lastBuildDate><atom:link href="https://blog.expandtesting.com/tags/selenium/index.xml" rel="self" type="application/rss+xml"/><item><title>Benchmark Css Vs. Xpath</title><link>https://blog.expandtesting.com/webdriver/css-vs-xpath/</link><pubDate>Sat, 01 Aug 2020 18:08:30 +0200</pubDate><guid>https://blog.expandtesting.com/webdriver/css-vs-xpath/</guid><description>Introduction Dans un pr√©c√©dent article j&amp;rsquo;ai expliqu√© comment choisir la meilleure strat√©gie de localisation webdriver en fonction du contexte du projet.
En revanche il manquait des donn√©es statistiques Css Vs.Xpath pour r√©duire la propagation du bruit üòõ</description></item><item><title>Comment choisir une strat√©gie de localisation Webdriver ?</title><link>https://blog.expandtesting.com/webdriver/strategie-localisation-webdriver/</link><pubDate>Thu, 23 Jul 2020 08:08:30 +0200</pubDate><guid>https://blog.expandtesting.com/webdriver/strategie-localisation-webdriver/</guid><description>Introduction Comme vous le savez les outils d&amp;rsquo;automatisation des tests UI comme Selenium, WebdriverIO, etc. utilisent le m√™me principe de fonctionnement et partagent les m√™mes probl√©matiques.
Tous les tests r√©alis√©s avec un outil webdriver est bas√© principalement sur le DOM et utilisent les s√©lecteurs web pour interagir avec l'interface utilisateur via des drivers (chromedriver, geckodriver, etc.</description></item><item><title>Comprendre le pattern Page Object Model</title><link>https://blog.expandtesting.com/design-patterns/page-object-model/</link><pubDate>Thu, 09 Jul 2020 12:00:30 +0200</pubDate><guid>https://blog.expandtesting.com/design-patterns/page-object-model/</guid><description>Introduction Le pattern Page Object Model est un des mod√®les de conception d'automatisation de test les plus largement utilis√©s.
La plupart des ing√©nieurs QA/SDET (Software Development Engineer in Test) ont √† un moment donn√© utilis√© une variante du pattern page object model.</description></item></channel></rss>